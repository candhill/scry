//
// Scry - Simple PHP Photo Album
// Copyright 2004 James Byers <jbyers@users.sf.net>
// http://scry.sourceforge.net
//
// Scry is distributed under a BSD License.  See LICENSE for details.
//
// $Id: DESIGN,v 1.5 2004/09/29 01:31:44 jbyers Exp $
//

Structure
---------

  index.php      controller
  functions.php  common functions
  setup.php      configuration
  
  views/         views
    list.php     directory, thumbnail list 
    view.php     picture details
    image.php    image loader

  templates/     XHTML template files

Control Flow
------------

Scry has three views:

  list   renders a listing of subdirectories and image thumbnails in the 
         current directory

  view   renders a single

  image  loads and resizes the target image, optionally caching to disk

index.php is the controller.  The view is selected based on the URL as
described below.  index.php sets up any global variables and then
punts control to the view.

Security
--------

All filesystem calls (reads, writes, and Scry functions) are marked
with "FS [TYPE]".  Each file also contains a security header comment
denoting critical path variables.  These variables are scrubbed and
tested via the path_security_check function, verifying the resolved
paths (actual path when considering multiple slashes, ., and ..) are
within the configured image paths.

There are no program execution or network functions in Scry.

Variables
---------

- Configuration variables are all contained in setup.php and prefixed
  with 'CFG'.  
- Scry assumes that register_globals is off, and references only the
  $_SERVER superglobals.  $_GET and $_POST are not used.

URLs
----

Scry passes all variables as parts of the URL path.  No GET or POST
variables are used.  The URL is structured as follows:

  http://[server]/[scry_path]/index.php/[action]/[v1]/[v2]/[v3]/[image_path]

v1, v2, v3, ... are view dependent parameters.  Note that order is
important and detailed in the URL parsing section of index.php.

Examples:

  list   http://scry.org/photos/index.php/list/2/path/to/images/
  view   http://scry.org/photos/index.php/view/12/path/to/images/00024601.jpg
  image  http://scry.org/photos/index.php/image/800x600/path/to/images/00024601.jpg

Global Variables
----------------

Used in (c)ontroller, (l)ist, (v)iew, (i)mage

  name           use  description
  -------------  ---  -------------------------------------------------------
  TODO           -    -

Caching
-------

If $CFG_cache_enable is true, Scry will cache resized images.

Caching is highly recommended.  If caching is off, or if you are
viewing the page for the first time, the page will render at a speed
proprotional to the processing speed of your webserver and the number
of images on the page.

Only two sizes of images will be cached: thumbnail size or view size,
as set by $CFG_thumb_(width|height) and $CFG_view_(width|height).

Images Outside Docroot
----------------------

By default, Scry sends Location: headers to the browser to load cached
images directly from the cache directory within the webserver's
docroot.  However, both the cache directory and the image directory
can be located outside the docroot if desired.  In this case, Scry
will pass image loads through readfile() in the image.php view.

See README for instructions on how to set up images outside the
docroot.

Templates
---------

Templates are simple XHTML files with <?php ?> looping, control, and
variable blocks.  'default' is a good example of the variables Scry
provides.  README has short instructions on how to create and change
themes.

Debugging
---------

There are two methods for debugging Scry.  The first is to use the
'debug' theme by changing $CFG_path_template and $CFG_url_template
variables to point to 'debug' instead of 'default'.  This theme dumps
the value of all Scry variables.  You can navigate through the views
but this theme will not display images.

To debug images.php, set the $CFG_debug_image variable to true.  The
image view will print text debugging output.  Note that if this flag
is set, images in other views will appear to be broken unless you load
the image view directly.
